mainmodule matmul {
    include "matmul.h";
    readonly CProxy_Main mainProxy;
    mainchare Main {
        entry Main(CkArgMsg *m);
        entry [reductiontarget] void done(CkReductionMsg *msg);
        entry [reductiontarget] void resumeIter(CkReductionMsg *msg);
    };
    array [1D] Data{
        entry Data(PRECISION inidataA[height*width], PRECISION inidataB[width*height], int wheight, int wwidth, int height, int width, int peset, int workportion, int iternum_);
        entry void pauseForLB();
        entry void matRun(CkCallback &cb) {
            atomic {
                cudaIniVar(height,workdata, wheg, workdata, renum, matA, matB, matC, inid);
                contribute(sizeof(bool), &ctype, CkReduction::set, cb);
            }
        };
    };
};

