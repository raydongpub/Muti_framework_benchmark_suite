mainmodule nw {
    readonly CProxy_Main mainProxy;
    mainchare Main {
        entry Main(CkArgMsg *m);
        entry [reductiontarget] void done(CkReductionMsg *msg);
        entry [reductiontarget] void resumeIter(CkReductionMsg *msg);
    };
    include "nw.h";
    array [1D] Data{
        entry Data(_CONF_ config, int penum_);
        entry void pauseForLB();
        entry void doWork();
        entry void nwRun(CkCallback &cb) {
            atomic {
                doWork();
                contribute(sizeof(bool), &ctype, CkReduction::set, cb);
            }
        };
    };


};

